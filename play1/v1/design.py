当前这个狼人杀服务端的实现逻辑和代码框架如下：

---

## 1. 总体结构

- 使用了`FastMCP`框架，所有操作通过`@mcp.tool()`装饰器暴露为工具接口。
- 游戏状态通过全局变量`game_state`维护，包括玩家、角色、阶段、存活玩家、历史、行动次数等。

---

## 2. 主要数据结构

```python
game_state = {
    "players": {},         # 玩家信息，key为player_id
    "roles": {},           # 角色分配，key为player_id，value为角色名
    "phase": "init",       # 当前阶段："init"、"night"、"day"
    "alive_players": [],   # 存活玩家列表
    "history": [],         # 游戏历史记录（未详细实现）
    "action_count": 0      # 行动次数（未详细实现）
}
```

---

## 3. 主要功能接口（工具）

### 3.1. start_game(player_count=8)
- 初始化游戏状态，随机分配角色（3狼人+2预言家+2女巫+2猎人+2平民，超出部分为平民）。
- 设置初始阶段为“night”（夜晚）。

### 3.2. get_role(player_id)
- 查询指定玩家的角色。

### 3.3. night_action(player_id, action, target=None)
- 仅在夜晚阶段可用。
- 狼人可“击杀”目标，预言家可“查看”目标身份，女巫可“毒药”或“救人”。
- 行动会直接修改`alive_players`，如击杀/毒杀目标。

### 3.4. change_scene()
- 切换游戏阶段（夜晚<->白天）。
- 若当前为夜晚，切换到白天；若为白天，切换到夜晚。

### 3.5. day_action(player_id, action, target=None)
- 仅在白天阶段可用。
- 玩家可“发言”或“投票”放逐目标，投票会直接移除目标玩家。

### 3.6. check_game_status()
- 检查当前游戏状态。
- 若所有狼人死亡，则好人阵营胜利；若所有好人死亡，则狼人阵营胜利；否则返回存活玩家列表。

---

## 4. 游戏流程

1. **初始化**：调用`start_game`分配角色，进入夜晚。
2. **夜晚行动**：狼人击杀、预言家查验、女巫用药。
3. **切换白天**：调用`change_scene`，进入白天。
4. **白天发言/投票**：玩家依次发言，投票放逐嫌疑人。
5. **切换夜晚**：调用`change_scene`，进入夜晚。
6. **胜负判定**：每轮结束后调用`check_game_status`，判断是否有阵营获胜。
7. **循环往复**：直到一方胜利。

